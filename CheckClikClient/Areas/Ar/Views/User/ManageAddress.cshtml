@using CheckClickClient
@model Customer.Models.CustomerManageAddressDTO
@{
    ViewBag.Title = "CHECKCLIK | Manage Address";
}
<style>
    #new-address .form-wrapper, #new-address .form-wrapper .form-item select, #new-address .form-wrapper .form-item input {
        background: #fff;
        width: 100%;
    }

        #new-address .form-wrapper .form-item select, #new-address .form-wrapper .form-item input {
            height: 38px;
        }

    .address-box {
        padding: 10px;
        margin-bottom: 15px;
        -webkit-box-shadow: 0 0 10px #ccc;
        box-shadow: 0 0 10px #ccc;
    }

    #new-address .form-wrapper .form-item label {
        color: #8a8a8a;
        font-weight: 500;
    }

    #new-address .form-wrapper .form-item input[type=radio] {
        height: auto;
        width: auto;
    }

    .fa-edit, .fa-times {
        color: #8a8a8a;
        padding: 10px 3px 0 0;
    }
</style>
<style>
    .user-img, .user-menu, .user-details {
        background-color: #fff;
        padding: 15px;
        margin-bottom: 15px;
        -webkit-box-shadow: 0 0 10px #ccc;
        box-shadow: 0 0 10px #ccc;
    }

        .user-img img {
            width: 60px;
            height: 60px;
            object-fit: cover;
            border-radius: 50%;
            cursor: pointer;
        }

        .user-img .image-upload > input {
            display: none;
        }

        .user-menu ul li a {
            display: block;
            font-size: 15px;
            padding: 10px 0 0;
            font-weight: 500
        }

            .user-menu ul li a:hover {
                color: #d06e67
            }

            .user-menu ul li a i {
                width: 30px;
                color: #666666;
            }

        .user-menu hr {
            margin-top: 15px;
            margin-bottom: 15px;
        }

        .user-details .form-wrapper {
            max-width: none;
            margin: inherit;
            box-shadow: none;
            background: #fff;
        }

            .user-details .form-wrapper a small {
                font-size: 14px;
                color: #666666;
            }

            .user-details .form-wrapper input {
                background: #fff;
            }

    .addressbox-height {
        height: 450px;
        overflow-y: auto;
    }

    /*.user-details .form-wrapper .button-panel .button {
                    height: 45px;
                }*/
</style>
<script src="~/web-assets/js/sweetalert.js"></script>
@{
    var user = AppUtils.UserLogin;
}

@using (Html.BeginForm("MyProfile", "User", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @*@Html.AntiForgeryToken()*@
    <section class="profile">
        <div class="container">
            <div class="row d-flex">
                <div class="col-sm-4">
                    <div class="same-block-height">
                        <div class="user-img">
                            <div class="image-upload">
                                <label for="file-input">
                                    @if (user.UserProfile != null)
                                    {
                                        <img id="imgProfile" src="@user.UserProfile" />
                                    }
                                    else
                                    {
                                        <img id="imgProfile" src="~/web-assets/images/user-profile.png" />
                                    }

                                </label>
                                <input id="file-input" type="file" name="ProfilePic" value="Choose file" accept="image/*" onchange="loadFile(event)" />

                                <span class="pl-8 ">@user.UserName</span>
                            </div>
                        </div>
                        <div class="user-menu">
                            <ul>
                                <li><a href="~/user/myProfile"><i class="fas fa-user"></i> Profile</a></li>
                                <hr />
                                <li><a href="~/myorders"><i class="fas fa-box-open"></i> My Orders</a></li>
                                <hr />
                                <li><a href="~/wishlist"><i class="fas fa-heart"></i> Wishlist</a></li>
                                <hr />
                                <li><a href="~/user/manageAddress"><i class="fas fa-address-book"></i> Manage Account</a></li>
                                <hr />
                                <li><a href="~/user/changePassword"><i class="fas fa-sync-alt"></i> Change Password</a></li>
                                <hr />
                                @*<li><a href="~/user/chat"><i class="fa fa-comments" aria-hidden="true"></i> Chat</a></li>
                                <hr />*@
                                <li><a href="@Url.Action("logout", "user")"><i class="fas fa-power-off"></i> Logout</a></li>
                            </ul>
                        </div>
                    </div>
                </div>
                <div class="col-sm-8 user-details">
                    <div class="myorder-tabs  ">
                        <ul class="nav nav-tabs text-center user-information">
                            <li class="@(Model.FlagId == 2 ? "" : "active")"><a data-toggle="pill" href="#personal">INFORMATION</a></li>
                            <li><a class="@(Model.FlagId == 2 ? "active" : "")" data-toggle="pill" href="#addresses">ADDRESS</a></li>
                        </ul>
                        <hr class="mt-0" />
                        <div class="tab-content pt-0">
                            <div id="personal" class="tab-pane fade @(Model.FlagId == 2 ? "" : "in active") ">
                                <div class="form-wrapper p-0">
                                    <input type="hidden" value="" id="hdnMobile" />
                                    <div class="form-wrapper">
                                        <h4>PERSONAL INFORMATION</h4>
                                        <hr />
                                        <div class="row" style="margin-bottom:20px">
                                            <div class="col-sm-6">
                                                <div class="form-item">
                                                    @Html.EditorFor(model => model.FirstName, new
                                                {
                                                htmlAttributes = new
                                                {
                                                @class = "",
                                                @placeholder = "Enter First Name",
                                                @id = "txtFirstName"
                                                }
                                                })
                                                    <span id="lblFirstName" class="text-danger"></span>

                                                </div>
                                            </div>
                                            <div class="col-sm-6">
                                                <div class="form-item">
                                                    @Html.EditorFor(model => model.LastName, new
                                                {
                                                htmlAttributes = new
                                                {
                                                @class = "",
                                                @placeholder = "Enter Last Name",
                                                @id = "txtLastName",
                                                @autocomplete = "off"
                                                }
                                                })
                                                    <span id="lblLastName" class="text-danger"></span>

                                                </div>
                                            </div>

                                        </div>

                                        <h4 class="mb-2">Email Address <a href="#" id="modelEmail" class="ml-5"><small>Edit</small></a></h4>
                                        <div class="row" style="margin-bottom:20px">
                                            <div class="col-sm-12">
                                                <div class="form-item">
                                                    @Html.EditorFor(model => model.EmailId, new
                                                {
                                                htmlAttributes = new
                                                {
                                                @class = "form-control",
                                                @placeholder = "Enter EmailId",
                                                @id = "txtEmailId",
                                                @disabled = true,
                                                @autocomplete = "off"
                                                }
                                                })
                                                    <span id="lblEmailIdErr" class="text-danger"></span>
                                                </div>
                                            </div>

                                        </div>

                                        <h4 class="mb-3">Mobile Number <a href="#" id="OpenModel" class="ml-5"><small>Edit</small></a></h4>
                                        <div class="row" style="margin-bottom:20px">
                                            <div class="col-sm-12">
                                                <div class="input-group">
                                                    <span class="input-group-btn">
                                                        <span class="btn btn-default">+966</span>
                                                    </span>
                                                    <div class="form-item">
                                                        @Html.EditorFor(model => model.MobileNo, new
                                                    {
                                                    htmlAttributes = new
                                                    {
                                                    @class = "form-control",
                                                    @placeholder = "Enter MobileNo",
                                                    @id = "txtMobileNo",
                                                    @onkeypress = "return isNumricKey(event)",
                                                    @disabled = true,
                                                    @maxLength = 9,
                                                    @minLength = 9,
                                                    @autocomplete = "off"
                                                    }
                                                    })

                                                        <span id="lblMobileNoErr" class="text-danger"></span>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>


                                        <h4 class="mb-3">Address </h4>
                                        <div class="row">
                                            <div class="col-sm-12">

                                                <div class="form-item">
                                                    @Html.TextAreaFor(model => model.Address, new
                                                {
                                                @class = "form-control",
                                                @placeholder = "Enter Address",
                                                @id = "txtAddress",
                                                @autocomplete = "off"
                                                })
                                                    <span id="lblAddress" class="text-danger"></span>

                                                </div>

                                            </div>
                                        </div>

                                        <div class="button-panel mt-5">
                                            <button type="submit" name="submit" id="btnUpdate" value="UserUpdate" class="button form-control pt-3"><strong>Update</strong></button>
                                        </div>
                                    </div>

                                </div>
                            </div>

                            <div id="addresses" class="tab-pane fade @(Model.FlagId == 2 ? "in active" : "")">
                                <div id="new-address" class="row">
                                    <div class="col-md-6">
                                        @*@using (Html.BeginForm("ManageAddress", "User", FormMethod.Post, new { enctype = "multipart/form-data" }))
                                    {*@
                                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                        <div class="form-wrapper">
                                            <h4>Add New Addresses</h4>
                                            @Html.HiddenFor(model => model.Id)
                                            <form id="FormId">
                                                <div class="form-item">
                                                    @Html.DropDownListFor(model => model.CountryId, new SelectList(Model.CountryList, "Id", "NameEn"), "Select Country",
                                                new { id = "drpCountryList", @class = "select form-control select2-hidden-accessible", @autocomplete = "off" })
                                                    <span id="lblCountryList" class="text-danger" style="display:none;">Select Country</span>
                                                    @Html.ValidationMessageFor(model => model.CountryId, "", new { @class = "text-danger" })
                                                </div>
                                                @if (Model.Id > 0)
                                                {
                                                    <div class="form-item">
                                                        @Html.DropDownListFor(model => model.CityId, new SelectList(Model.CityList, "Id", "NameEn"), "Select City",
                                                new { id = "drpCityList", @class = "select form-control select2-hidden-accessible", @autocomplete = "off" })
                                                        <span id="lblCityList" class="text-danger" style="display:none;">Select City</span>
                                                        @Html.ValidationMessageFor(model => model.CityId, "", new { @class = "text-danger" })

                                                    </div>
                                                    @Html.HiddenFor(model => model.CityId)
                                                }
                                                else
                                                {
                                                    <div class="form-item">
                                                        @Html.DropDownListFor(model => model.CityId, new SelectList(Enumerable.Empty<SelectListItem>(), "Id", "NameEn"), "Select City",
                                                new { id = "drpCityList", @class = "select form-control select2-hidden-accessible", @autocomplete = "off" })
                                                        <span id="lblCityList" class="text-danger" style="display:none;">Select City</span>
                                                        @Html.ValidationMessageFor(model => model.CityId, "", new { @class = "text-danger" })

                                                    </div>
                                                    @Html.HiddenFor(model => model.CityId)
                                                }
                                                <div class="form-item">
                                                    @Html.EditorFor(model => model.FullName, new
                                                {
                                                htmlAttributes = new
                                                {
                                                @placeholder = "Enter Full Name",
                                                @id = "txtFullName",
                                                @autocomplete = "off"
                                                //@required = "required"
                                                }
                                                })
                                                    <span id="lblFullName" class="text-danger" style="display:none;">Enter Full Name </span>

                                                </div>
                                                <div class="form-item">
                                                    @Html.EditorFor(model => model.Address1, new
                                                {
                                                htmlAttributes = new
                                                {
                                                @placeholder = "Enter Address1",
                                                @id = "txtAddress1",
                                                @autocomplete = "off"
                                                //@required = "required"
                                                }
                                                })
                                                    <span id="lblAddress1" class="text-danger" style="display:none;">Enter Address </span>

                                                </div>
                                                <div class="form-item">
                                                    @Html.EditorFor(model => model.Address2, new
                                                {
                                                htmlAttributes = new
                                                {
                                                @placeholder = "Enter Address2",
                                                @id = "txtAddress2",
                                                @autocomplete = "off"
                                                }
                                                })
                                                    @Html.ValidationMessageFor(model => model.Address2, "", new { @class = "text-danger" })
                                                </div>
                                                <div class="form-item">
                                                    @Html.EditorFor(model => model.Zipcode, new
                                                {
                                                htmlAttributes = new
                                                {
                                                @placeholder = "Enter Zipcode",
                                                @id = "txtZipcode",
                                                @onkeypress = "return isNumricKey(event)",
                                                @maxLength = 6,
                                                @minLength = 5,
                                                @autocomplete = "off"
                                                //@required="required"
                                                }
                                                })
                                                    <span id="lblZipCode" class="text-danger" style="display:none;"></span>

                                                </div>
                                                <div class="form-item">
                                                    <div class="input-group" style="width: 100%">
                                                        <span class="input-group-addon" id="faPhone">
                                                            <i class="">+966</i>
                                                        </span>
                                                        @Html.TextBoxFor(model => model.PhoneNumber, new
                                                    {
                                                    @placeholder = "Enter Phone Number",
                                                    @id = "txtPhoneNumber",
                                                    @onkeypress = "return isNumricKey(event)",
                                                    @maxLength = 9,
                                                    @class = "form-control",
                                                    @autocomplete = "off"
                                                    //@required="required"


                                                    })

                                                    </div>
                                                    <span id="lblPhoneNumber" class="text-danger" style="display:none;">Enter Phone Number</span>
                                                </div>
                                                <div class="form-item">
                                                    <label class="radio-inline" id="radioValidations">
                                                        @Html.RadioButton("optradio", "0") Home Address
                                                    </label>
                                                    <label class="radio-inline">
                                                        @Html.RadioButton("optradio", "1") Office Address
                                                    </label>
                                                    <br />
                                                    <span id="lblAddressType" class="text-danger" style="display:none;">Select Address Type</span>


                                                </div>

                                                <div class="button-panel mt-5">
                                                    @if (Model.Create == true)
                                                    {
                                                        <button class="button form-control pt-3" aria-controls="step1" name="submit" value="Add" type="submit" id="btnAddAddress">Add Address</button>
                                                    }
                                                    @if (Model.Update == true)
                                                    {
                                                        <button class="button form-control pt-3" aria-controls="step2" name="submit" value="Update" type="submit" id="btnUpdateAddress">Update Address</button>
                                                    }

                                                </div>
                                            </form>
                                        </div>
                                        @*}*@
                                    </div>
                                    <div class="col-md-6">
                                        <div class="row mb-3 addressbox-height">
                                            @if (Model.ListOfCustomerAddress != null)
                                            {
                                                foreach (var items in Model.ListOfCustomerAddress)
                                                {
                                                    <div class="col-md-12">
                                                        <div class="address-box">
                                                            <div class="pull-right">
                                                                <a href="@Url.Action("manageaddressedit","user", new { Id=Customer.Utils.StringUtil.URLEncrypt(items.Id.ToString())})" id="btnEdit"><i class="far fa-edit"></i></a>
                                                                <a href="@Url.Action("manageaddressdelete","user", new { Id= Customer.Utils.StringUtil.URLEncrypt(items.Id.ToString())})"><i class="far fa-trash-alt"></i></a>
                                                            </div>
                                                            @if (items.AddressType == 0)
                                                            {
                                                                <h4 class="mb-4">Home Address</h4>
                                                            }
                                                            else
                                                            {
                                                                <h4 class="mb-4">Office Address</h4>
                                                            }

                                                            <div class="Address pl-2">
                                                                <p class="mb-3"><strong>@items.FullName</strong></p>
                                                                <p>@items.Address1, @items.Address2</p>
                                                                <p>@items.CityNameEn - @items.Zipcode</p>
                                                                <p>@items.CountryNameEn</p>
                                                                <p>@items.PhoneNumber</p>
                                                            </div>
                                                        </div>
                                                    </div>
                                                }
                                            }
                                        </div>
                                        <div class="row mb-3">
                                            <div class="col-md-12">
                                                <div class="address-buttons text-center">
                                                    <button type="button" class="address upaddress"><i class="fa fa-angle-up"></i></button>
                                                    <button type="button"><i class="fa fa-angle-down downaddress"></i></button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
            </div>

        </div>
    </section>
}
<div id='myModal' class='modal'>
    <div class="modal-dialog" style="background-color:white">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
            <h4 class="modal-title" id="myModalLabel">Update Mobile Number</h4>
        </div>
        <br />
        <div class="form-wrapper">
            <form>
                <div class="input-group">
                    <span class="input-group-btn">
                        <span class="btn btn-default">+966</span>
                    </span>
                    <div class="form-item">
                        <input type="text" id="mobileNo" onkeypress="return isNumricKey(event)" class="form-control" data-val="true" maxlength="9" name="MobileNo" placeholder="Enter Mobile Number" value="" />
                        <span id="mobileErr"></span>
                    </div>

                </div>
                <br /><br />

                <div class="button-panel mt-5">
                    <a class="button form-control pt-3" onclick="verifyMobile()" id="btnUpdate">Update</a>
                </div>
            </form>
        </div>
    </div>

</div>
<div id='myModalOTp' class='modal'>
    <div class="modal-dialog" style="background-color:white">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
            <h4 class="modal-title" id="myModalLabel">Update Mobile Number</h4>
        </div>
        <br />
        <div class="form-wrapper">
            <form>
                <span id="Timer"></span>
                <p>Enter the OTP Sent to the mobile number<br /><strong>+966 <span id="fmobNo"></span></strong> for verification.  </p>
                <div class="form-item">
                    <input id="fotpNo" class="form-control number" autocomplete="off" type="text" name="fname" maxlength="4" minlength="4" required="required" placeholder="Enter OTP" />
                </div>
                <span id="fotpError" class="text-danger"></span>
                <span id="otpTimer"></span>
                <div class="button-panel mt-5">
                    <a class="button form-control pt-3" onclick="VerifyOTP()">Verify</a>
                    @*<button type="button" class="button" title="Sign In" value="Sign Up">Sign Up</button>*@
                </div>
            </form>
        </div>
    </div>

</div>
<div id='myModalEmail' class='modal'>
    <div class="modal-dialog" style="background-color:white">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
            <h4 class="modal-title" id="myModalLabel">Update E-Mail</h4>
        </div>
        <br />
        <div class="form-wrapper">
            <form>

                <div class="form-item">
                    <input id="fEmailId" class="form-control number" autocomplete="off" type="text" name="fname" required="required" placeholder="Enter Email-Id" />
                </div>
                <span id="fEmailIdError" class="text-danger"></span>

                <div class="button-panel mt-5">
                    <a class="button form-control pt-3" onclick="VerifyEmail()" id="verifyEmailID">Update</a>
                </div>
            </form>
        </div>
    </div>

</div>


@section Scripts{
    <script src="~/assets1/assets/pages/scripts/components-select2.min.js" type="text/javascript"></script>
    <script src="~/web-assets/js/bootstrap-fileinput.js"></script>
    <script>

        function isNumricKey(evt) {
            var charCode = (evt.which) ? evt.which : evt.keyCode;
            if (charCode < 48 || charCode > 57)
                return false;
            return true;
        }
        $(document).ready(function () {

            $("#btnAddAddress").click(function () {
                if ($('#drpCountryList').val() == 0) {
                    $("#lblCountryList").show();
                    event.preventDefault();
                }
                if ($('#drpCityList').val() == 0) {
                    $("#lblCityList").show();
                    event.preventDefault();
                }
                var asdf = $('input[name=optradio]:checked').val();
                if (asdf != "0" && asdf != "1") {
                    $("#lblAddressType").show();
                    event.preventDefault();
                }
                else {
                    $("#lblAddressType").hide();
                }
                if ($('#txtAddress1').val() == 0) {
                    $("#lblAddress1").show();
                    event.preventDefault();
                } else $("#lblAddress1").hide();

                var txtFlName = 0;
                if ($('#txtFullName').val() == 0) {
                    $("#lblFullName").show();
                    event.preventDefault();
                } else $("#lblFullName").hide();

                if ($('#txtPhoneNumber').val() == 0) {
                    $("#lblPhoneNumber").text("Enter Phone Number");
                    $("#lblPhoneNumber").show();
                    event.preventDefault();
                } else if ($('#txtPhoneNumber').val().length != 9) {
                    //alert($('#txtPhoneNumber').val().length);
                    $("#lblPhoneNumber").text("Phone number must be 9 digits.");
                    $("#lblPhoneNumber").show();
                    event.preventDefault();
                } else $("#lblPhoneNumber").hide();

                if ($('#txtZipcode').val() == 0) {
                    $("#lblZipCode").text("Enter Zip Code");
                    $("#lblZipCode").show();
                    event.preventDefault();
                }
                else if ($('#txtZipcode').val().length >= 5 && $('#txtZipcode').val().length <= 6) {
                    $("#lblZipCode").hide();
                }
                else {
                    $("#lblZipCode").text("Zip code must be 5-6 digits.");
                    $("#lblZipCode").show();
                    event.preventDefault();
                }

            });
            $("#btnUpdateAddress").click(function () {
                if ($('#drpCountryList').val() == 0) {
                    $("#lblCountryList").show();
                    event.preventDefault();
                }
                if ($('#drpCityList').val() == 0 || $('#drpCityList').val() == "" || $('#drpCityList').val() == undefined) {
                    $("#lblCityList").show();
                    event.preventDefault();
                }
                var asdf = $('input[name=optradio]:checked').val();
                if (asdf != "0" && asdf != "1") {
                    $("#lblAddressType").show();
                    event.preventDefault();
                }
                else {
                    $("#lblAddressType").hide();
                }
                var txtFlName = 0;
                if ($('#txtFullName').val() == 0) {
                    $("#lblFullName").show();
                    event.preventDefault();
                } else $("#lblFullName").hide();

                if ($('#txtPhoneNumber').val() == 0) {
                    $("#lblPhoneNumber").text("Enter Phone Number");
                    $("#lblPhoneNumber").show();
                    event.preventDefault();
                } else if ($('#txtPhoneNumber').val().length != 9) {
                    //alert($('#txtPhoneNumber').val().length);
                    $("#lblPhoneNumber").text("Phone number must be 9 digits.");
                    $("#lblPhoneNumber").show();
                    event.preventDefault();
                } else $("#lblPhoneNumber").hide();

                if ($('#txtZipcode').val() == 0) {
                    $("#lblZipCode").text("Enter Zip Code");
                    $("#lblZipCode").show();
                    event.preventDefault();
                }
                else if ($('#txtZipcode').val().length >= 5 && $('#txtZipcode').val().length <= 6) {
                    $("#lblZipCode").hide();
                }
                else {
                    $("#lblZipCode").text("Zip code must be 5-6 digits.");
                    $("#lblZipCode").show();
                    event.preventDefault();
                }
            });

            var updateAddress = '@TempData["AddressUpdate"]';
            if (updateAddress == 'True') {
                swal({
                    title: "Success",
                    text: "Address Updated Successful.",
                    icon: "success",
                    button: "Ok!",
                });
            }
            var AddressDelete = '@TempData["AddressDelete"]';
            if (AddressDelete == 'True') {
                swal({
                    title: "Success",
                    text: "Address Deleted Successful.",
                    icon: "success",
                    button: "Ok!",
                });
            }
            //var countryList = Html.Raw(Json.Encode(Model.CountryList));
            //var cityList = Html.Raw(Json.Encode(Model.CityList));
            var countryList = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.CountryList) as String);
            var cityList = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.CityList) as String);

            $("#drpCountryList").change(function () {
                var cval = $(this).val();
                CountryID = cval;
                if (cityList != null) {
                    var markup = "<option value='0'>-Select City-</option>";
                    for (var x = 0; x < cityList.length; x++) {
                        if (cityList[x]["CountryID"] == cval) {
                            markup += "<option value=" + cityList[x]["Id"] + ">" + cityList[x]["NameEn"] + "</option>";
                        }
                    }
                    // debugger
                    if (cval > 0)
                        $("#drpCityList").html(markup).show();

                    $("#lblCountryList").hide();
                    $("#drpCityList").attr("disabled", false);
                    if (@Model.CountryId > 0) {
                        $("#lblCountryList").hide();
                        $("#drpCityList").val(@Model.CityId);
                    }
                    if (@Model.CityId > 0) {
                        $("#lblCityList").css("display", "none");
                        $("#drpCityList").val(@Model.CityId);

                    }

                }
                else {
                    var markup = "<option value='0'>-Select City-</option>";
                    $("#drpCityList").html(markup).show();
                }
            });
            $("#drpCityList").change(function () {
                var cval = $(this).val();
                if (cval != 0) {
                    $("#lblCityList").hide();
                }
                else {
                    if ($("#drpCountryList").val() > 0) {
                        $("#lblCityList").show();
                        event.preventDefault();
                    }
                }
            });


        });
    </script>
    <script>
        var loadFile = function (event) {
            var output = document.getElementById('imgProfile');
            output.src = URL.createObjectURL(event.target.files[0]);
        };
    </script>
    <script>
        $(document).ready(function () {
            $("#address_country").select2({ width: "100%" });
            $("#address_city").select2({ width: "100%" });

            $("#EditPersonal").click(function () {
                $('#btnEditPersonal').show();
                //$('#txtFirstName').a;

            });

            $("#txtFirstName").blur(function () {
                // debugger;
                var val = $(this).val();
                $("#lblFirstName").text(val == "" ? "Required" : "");
            });
            $("#txtLastName").blur(function () {
                // debugger;
                var val = $(this).val();
                $("#lblLastName").text(val == "" ? "Required" : "");
            });

            $("#fEmailId").blur(function () {
                // debugger;
                var email = $(this).val();
                $("#fEmailIdError").text(email == "" ? "Email ID Required" : "");
                if (email != '') {
                    var regex = /^([a-zA-Z0-9_.+-])+\@@(([a-zA-Z0-9-])+\.)+([a-zA-Z0-9]{2,4})+$/;
                    var res = regex.test(email);
                    if (res) {
                        $.ajax({
                            url: '/User/GetVerifyEmail',
                            data: { 'Email': email },
                            datatype: 'json',
                            type: 'Get',
                            success: function (result) {
                                // debugger
                                var status = result.status;
                                if (!status) {
                                    $('#fEmailIdError').html(result.message).addClass("text-danger");
                                    return
                                }
                                else {
                                    $('#fEmailIdError').html('')
                                }
                            },
                            error: function () {
                                $('#fEmailIdError').html('Something went wrong').addClass("text-danger");;
                            }
                        })
                    }
                    if (!res) {
                        $('#fEmailIdError').html('Invalid Email Id').addClass("text-danger");
                        return;
                    }
                }
            });
            //$("#txtMobileNo").blur(function () {
            //    // debugger;
            //    var val = $(this).val();
            //    $("#lblMobileNoErr").text(val == "" ? "Required" : "");
            //});
            $("#txtMobileNo").blur(function () {
                // debugger;
                var val = $(this).val();
                $("#lblMobileNoErr").text(val == "" ? "Mobile Number Required" : "");
                if (val != "") {
                    $("#lblMobileNoErr").text(isNaN(val) == true ? "Invalid Mobile Number" : "");
                    if (val.length != 9)
                        $("#lblMobileNoErr").text("Mobile Number Must Be 9 Digit");


                }

            });
            $("#OpenModel").click(function () {
                $('#myModal').modal('show');
            });
            $("#modelEmail").click(function () {
                $('#myModalEmail').modal('show');
            });

            var MenuIDs = sessionStorage.getItem('Name');
            var MobileNoMOdel = sessionStorage.getItem('MobileNoMOdel');
            var MobileNo = sessionStorage.getItem('MobileNo');
            //alert(sessionStorage.getItem('Name'));
            if (MenuIDs == 1) {
                $('#myModalOTp').modal('show');
                $("#hdnMobile").val(MobileNo);
                $('#fmobNo').html(MobileNo);
                sessionStorage.removeItem('Name');
            }
            if (MobileNoMOdel == 2) {
                $('#myModal').modal('show');
                sessionStorage.removeItem('MobileNoMOdel');
            }
        });
    </script>
    <script>
        function isNumricKey(evt) {
            var charCode = (evt.which) ? evt.which : evt.keyCode;
            if (charCode < 48 || charCode > 57)
                return false;
            return true;
        }
        function verifyMobile() {

            var mob = $("#mobileNo").val();
            if (mob == '') {
                $('#mobileErr').html('Mobile No Required').addClass("text-danger");
                return;
            }

            if (mob.length != 9) {
                $('#mobileErr').html('Invalid Mobile No').addClass("text-danger");
                return;
            }
            else {
                $.ajax({
                    type: "GET",
                    url: '/User/GetOtp',
                    contentType: "application/json; charset=utf-8",
                    data: { "MobileNo": mob },
                    datatype: "json",
                    success: function (data) {

                        var countDownDate = data.status;
                        if (!countDownDate) {

                            $('#mobileErr').html(data.message).addClass("text-danger");
                            sessionStorage.setItem('MobileNoMOdel', 2)
                            $('#myModal').modal('show');

                        }
                        else {
                            // debugger
                            var mno = $("#mobileNo").val();


                            $('#fmobNo').html(mno);
                            $('#myModal').modal('hide');
                            var userName = 1;
                            sessionStorage.setItem('Name', userName)
                            sessionStorage.setItem('MobileNo', mno)
                            //$('#myModalOTp').modal('show');
                            //$('#txtMobileNo').html(mno);
                            //$('#step2').hide();
                            //$('#step3').show();
                        }
                    },
                    error: function () {
                        $('#mobileErr').html('Something Went Wrong').addClass("text-danger");
                        $('#myModal').modal('show');
                        return;
                    }
                });
                $('#mobileErr').html('');
                //$('#myModal').modal('show');
            }
        }
        function VerifyOTP() {
            var mobileNo = $("#hdnMobile").val();
            //var mobileNo = $("#fmobNo").val();
            var otpno = $("#fotpNo").val();
            // debugger

            $.ajax({

                /**/
                url: '/User/GetUpdateMobile',
                /**/
                type: 'get',
                datatype: 'json',
                data: { 'MobileNo': mobileNo, 'otp': otpno },
                success: function (data) {
                    // debugger;
                    var countDownDate = data.status;
                    if (!countDownDate) {
                        //$('#fotpError').html(data.Message).addClass("text-danger");
                        $('#fotpError').html("Invalid OTP").addClass("text-danger");
                        return
                    }
                    else {

                        $('#fotpError').html(data.message).css('color', 'green');
                        swal({
                            title: "Success!",
                            text: "Mobile Number Updated Successful.",
                            icon: "success",
                            buttons: {
                                button: "Ok!",
                            },
                        }).then((value) => {
                            window.location.href = "/User/MyProfile";
                        });
                    }
                },
                error: function () {
                    alert("Something went wrong, try after sometime")
                }
            });
        }
        function VerifyEmail() {
            var vefemail = $("#fEmailId").val();
            // debugger
            $("#fEmailIdError").text(vefemail == "" ? "Email ID Required" : "");
            if (vefemail != '') {
                var regex = /^([a-zA-Z0-9_.+-])+\@@(([a-zA-Z0-9-])+\.)+([a-zA-Z0-9]{2,4})+$/;
                var res = regex.test(vefemail);
                if (res) {
                    $.ajax({
                        url: '/User/GetVerifyEmail',
                        data: { 'Email': vefemail },
                        datatype: 'json',
                        type: 'Get',
                        success: function (result) {
                            // debugger
                            var status = result.Status;
                            if (!status) {
                                $('#fEmailIdError').html(result.Message).addClass("text-danger");
                                return
                            }
                            else {
                                $.ajax({
                                    url: '/User/GetUpdateEmail',
                                    type: 'get',
                                    datatype: 'json',
                                    data: { 'vefEmail': vefemail },
                                    success: function (data) {
                                        // debugger;
                                        var countDownDate = data.status;
                                        if (countDownDate)
                                        //{

                                        //    $('#fEmailIdError').html("Email Id Already Exists!").addClass("text-danger");
                                        //    return
                                        //}
                                        //else
                                        {

                                            $('#fEmailIdError').html(data.message).css('color', 'green');
                                            swal({
                                                title: "Success!",
                                                text: "E-mail Updated Successful.",
                                                icon: "success",
                                                buttons: {
                                                    button: "Ok!",
                                                },
                                            }).then((value) => {
                                                window.location.href = "/User/MyProfile";
                                            });
                                        }
                                    },
                                    error: function () {
                                        alert("Error Submission")
                                    }
                                });
                                //$('#fEmailIdError').html('')
                            }
                        },
                        error: function () {
                            $('#fEmailIdError').html('Something went wrong').addClass("text-danger");;
                        }
                    })
                }
                if (!res) {
                    $('#fEmailIdError').html('Invalid Email Id').addClass("text-danger");
                    return;
                }
            }


        }
    </script>
    <script>
        var scrolled = 0;
        $(document).ready(function () {
            $(".upaddress").on("click", function () {
                scrolled = scrolled > 0 ? scrolled - 300 : 0;
                $(".addressbox-height").animate({
                    scrollTop: scrolled
                });
            });
            $(".downaddress").on("click", function () {
                scrolled = scrolled + 300;
                $(".addressbox-height").animate({
                    scrollTop: scrolled
                });
            });
        });
    </script>


}

